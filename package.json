{
  "name": "voice-commander",
  "private": true,
  "version": "1.1.0",
  "description": "Voice Commander - A voice transcription app with floating widget",
  "author": "Masahiro Kubota",
  "type": "module",
  "main": "electron/main.cjs",
  "scripts": {
    "dev": "concurrently -k \"npm run dev:vite\" \"npm run dev:electron\"",
    "dev:floating": "concurrently -k \"npm run dev:vite\" \"npm run dev:electron:floating\"",
    "dev:floating-debug": "concurrently -k \"npm run dev:vite\" \"npm run dev:electron:floating:debug\"",
    "dev:vite": "vite",
    "dev:electron": "wait-on tcp:5173 && cross-env NODE_ENV=development electron .",
    "dev:electron:floating": "wait-on tcp:5173 && cross-env NODE_ENV=development FLOATING_MODE=true electron .",
    "dev:electron:floating:debug": "wait-on tcp:5173 && cross-env NODE_ENV=development FLOATING_MODE=true FLOATING_DEBUG=true electron .",
    "build": "npm run build:vite && npm run build:electron",
    "build:vite": "tsc -b && vite build",
    "build:electron": "echo 'Using .cjs files directly'",
    "lint": "eslint .",
    "preview": "electron .",
    "dist": "npm run build && electron-builder"
  },
  "dependencies": {
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.1",
    "@mui/icons-material": "^7.2.0",
    "@mui/material": "^7.2.0",
    "form-data": "^4.0.4",
    "node-fetch": "^2.7.0",
    "openai": "^5.10.1",
    "react": "^19.1.0",
    "react-dom": "^19.1.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.30.1",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@vitejs/plugin-react": "^4.6.0",
    "concurrently": "^9.2.0",
    "cross-env": "^7.0.3",
    "electron": "^37.2.3",
    "electron-builder": "^26.0.12",
    "eslint": "^9.30.1",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "typescript": "~5.8.3",
    "typescript-eslint": "^8.35.1",
    "vite": "^7.0.4",
    "wait-on": "^8.0.3"
  },
  "build": {
    "appId": "com.voicecommander.app",
    "productName": "Voice Commander",
    "directories": {
      "output": "dist-electron"
    },
    "files": [
      "dist/**/*",
      "electron/**/*.cjs"
    ],
    "linux": {
      "target": [
        {
          "target": "AppImage",
          "arch": ["x64", "arm64"]
        }
      ],
      "category": "Utility",
      "icon": "build/icon.png"
    },
    "appImage": {
      "artifactName": "Voice-Commander-${version}-${arch}.AppImage"
    }
  }
}
