name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
  pull_request:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: win
          - os: macos-latest
            platform: mac

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Web Assets
        run: npm run build

      - name: Build Electron app
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ matrix.platform }}" = "linux" ]; then
            npm run dist -- --linux
          elif [ "${{ matrix.platform }}" = "win" ]; then
            npm run dist -- --win
          else
            npm run dist -- --mac
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: |
            dist-electron/*.AppImage
            dist-electron/*.exe
            dist-electron/*.dmg
            dist-electron/*.deb
            dist-electron/*.rpm
            dist-electron/*.snap

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            linux-build/*.AppImage
            linux-build/*.deb
            linux-build/*.rpm
            linux-build/*.snap
            win-build/*.exe
            mac-build/*.dmg
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}